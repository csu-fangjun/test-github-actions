name: test-docker

on:
  push:
    branches:
      - master
      - docker

jobs:
  ubuntu:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        # python-version: ["3.7", "3.8", "3.9", "3.10"]
        python-version: ["3.8"]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Run the build process with Docker
        uses: addnab/docker-run-action@v3
        with:
            image: ubuntu:18.04
            options: -v ${{ github.workspace }}:/var/www
            run: |
              uname -a
              id

              python3 --version
              which python3
              apt update -qq
              apt-get install -qq -y git curl sudo libxml2 build-essential software-properties-common git-lfs
              add-apt-repository ppa:deadsnakes/ppa -y
              apt install -qq python3.8 python3.8-distutils -y
              which python3.8

              python3 --version

              cp /usr/bin/python3.8 /usr/bin/python3

              python3 --version

              curl https://bootstrap.pypa.io/get-pip.py --output get-pip.py
              python3 ./get-pip.py

              python3 --version

              git --version

              gcc --version

              git clone --depth 1 https://github.com/k2-fsa/k2

              export cuda=10.2
              ./k2/scripts/github_actions/install_cuda.sh
              ./k2/scripts/github_actions/install_cudnn.sh

              export torch=1.10.0
              ./k2/scripts/github_actions/install_torch.sh


              export CUDA_HOME=/usr/local/cuda
              export PATH=$CUDA_HOME/bin:$PATH
              export LD_LIBRARY_PATH=$CUDA_HOME/lib:$LD_LIBRARY_PATH
              export LD_LIBRARY_PATH=$CUDA_HOME/lib64:$LD_LIBRARY_PATH

              nvcc --version

              python3 -m torch.utils.collect_env


